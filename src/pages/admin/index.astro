---
import AdminLayout from '~/layouts/AdminLayout.astro';
---

<AdminLayout title="仪表盘 - 后台管理">
  <header class="mb-8">
    <h1 class="text-3xl font-bold">仪表盘</h1>
  </header>
  
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6"> {/* Adjusted grid to 2 cols */}
    <div class="border border-border p-6 bg-background">
      <h2 class="text-xl font-semibold mb-2">总图片数</h2>
      <p id="stats-total-images" class="text-3xl font-bold">0</p>
      <p class="text-sm text-gray-500 mt-1">当前存储中的图片总数</p>
    </div>
    
    <div class="border border-border p-6 bg-background">
      <h2 class="text-xl font-semibold mb-2">活跃 API Keys</h2>
      <p id="stats-active-apikeys" class="text-3xl font-bold">0</p>
      <p class="text-sm text-gray-500 mt-1">当前有效的 API Key 数量</p>
    </div>
  </div>

  <div class="mt-10 border border-border p-6 bg-background">
    <h2 class="text-xl font-semibold mb-4">快速操作</h2>
    <div class="flex flex-wrap gap-4">
      <a href="/admin/images" class="bg-background text-text border py-2 px-4 hover:text-background hover:bg-text hover:opacity-90 transition-opacity">
        管理图片
      </a>
      <a href="/admin/api-keys" class="bg-background text-text border py-2 px-4 hover:text-background hover:bg-text hover:opacity-90 transition-opacity">
        管理 API Keys
      </a>
      <a href="/admin/settings" class="bg-background text-text border py-2 px-4 hover:text-background hover:bg-text hover:opacity-90 transition-opacity">
        系统设置
      </a>
      <a href="/" class="bg-background text-text border py-2 px-4 hover:text-background hover:bg-text hover:opacity-90 transition-opacity">
        访问主站
      </a>
    </div>
  </div>
</AdminLayout>

<script>
  document.addEventListener('DOMContentLoaded', async () => {
    const totalImagesEl = document.getElementById('stats-total-images');
    const activeApiKeysEl = document.getElementById('stats-active-apikeys');

    if (!totalImagesEl || !activeApiKeysEl) return;

    try {
      const response = await fetch('/api/admin/dashboard-stats');
      if (!response.ok) {
        console.error('Failed to fetch dashboard stats:', response.status);
        totalImagesEl.textContent = 'N/A';
        activeApiKeysEl.textContent = 'N/A';
        return;
      }
      interface DashboardStats {
        totalImageCount?: number;
        activeApiKeyCount?: number;
      }
      const stats = await response.json() as DashboardStats;
      totalImagesEl.textContent = stats.totalImageCount?.toLocaleString() || '0';
      activeApiKeysEl.textContent = stats.activeApiKeyCount?.toLocaleString() || '0';
    } catch (error) {
      console.error('Error fetching dashboard stats:', error);
      totalImagesEl.textContent = '错误';
      activeApiKeysEl.textContent = '错误';
    }
  });
</script>
